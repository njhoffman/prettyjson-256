{"version":3,"sources":["../lib/utils.js"],"names":["exports","indent","numSpaces","Array","join","getMaxIndexLength","input","maxWidth","forEach","key","undefined","Math","max","length","isSerializable","inlineArrays","indexOf","Date","isArray","_isSerializable","stripAnsi","data","ansiRE","replace"],"mappings":";;;;;;AAAA;;;;AAEAA,QAAQC,MAAR,GAAiB,SAASA,MAAT,CAAiBC,SAAjB,EAA4B;AAC3C,SAAO,IAAIC,KAAJ,CAAUD,YAAY,CAAtB,EAAyBE,IAAzB,CAA8B,GAA9B,CAAP;AACD,CAFD;;AAIAJ,QAAQK,iBAAR,GAA4B,UAAUC,KAAV,EAAiB;AAC3C,MAAIC,WAAW,CAAf;;AAEA,qCAA2BD,KAA3B,EAAkCE,OAAlC,CAA0C,UAAUC,GAAV,EAAe;AACvD,QAAIH,MAAMG,GAAN,MAAeC,SAAnB,EAA8B;AAC5B;AACD;;AAEDH,eAAWI,KAAKC,GAAL,CAASL,QAAT,EAAmBE,IAAII,MAAvB,CAAX;AACD,GAND;AAOA,SAAON,QAAP;AACD,CAXD;;AAaA;AACAP,QAAQc,cAAR,GAAyB,UAACR,KAAD,EAAQS,YAAR,EAAyB;AAChD,MAAI,uBAAUT,KAAV,KACF,sBAASA,KAAT,CADE,IAEF,wBAAWA,KAAX,CAFE,IAGF,yBAAYA,KAAZ,CAHE,IAIF,oBAAOA,KAAP,CAJE,IAKD,sBAASA,KAAT,KAAmBA,MAAMU,OAAN,CAAc,IAAd,MAAwB,CAAC,CAL3C,IAMFV,iBAAiBW,IANnB,EAMyB;AACvB,WAAO,IAAP;AACD;;AAED;AACA,MAAI,0BAAaX,KAAb,KAAuB,qBAAQA,KAAR,CAA3B,EAA2C;AACzC,WAAO,IAAP;AACD;;AAED,MAAIS,gBAAgBZ,MAAMe,OAAN,CAAcZ,KAAd,CAAhB,IAAwCN,QAAQmB,eAAR,CAAwBb,MAAM,CAAN,CAAxB,EAAkC,KAAlC,CAA5C,EAAsF;AACpF,WAAO,IAAP;AACD;AACD,SAAO,KAAP;AACD,CApBD;;AAsBAN,QAAQoB,SAAR,GAAoB,UAACC,IAAD,EAAU;AAC5B,MAAMC,SAAS,6EAAf;AACA,SAAOD,KAAKE,OAAL,CAAaD,MAAb,EAAqB,EAArB,CAAP;AACD,CAHD","file":"utils.js","sourcesContent":["import { isEmpty, isFunction, isNumber, isUndefined, isNull, isString, isBoolean, isObjectLike } from 'lodash';\n\nexports.indent = function indent (numSpaces) {\n  return new Array(numSpaces + 1).join(' ');\n};\n\nexports.getMaxIndexLength = function (input) {\n  var maxWidth = 0;\n\n  Object.getOwnPropertyNames(input).forEach(function (key) {\n    if (input[key] === undefined) {\n      return;\n    }\n\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};\n\n// detect if an object can be output on same line\nexports.isSerializable = (input, inlineArrays) => {\n  if (isBoolean(input) ||\n    isNumber(input) ||\n    isFunction(input) ||\n    isUndefined(input) ||\n    isNull(input) ||\n    (isString(input) && input.indexOf('\\n') === -1) ||\n    input instanceof Date) {\n    return true;\n  }\n\n  // empty objects and arrays rendered on the same line\n  if (isObjectLike(input) && isEmpty(input)) {\n    return true;\n  }\n\n  if (inlineArrays && Array.isArray(input) && exports._isSerializable(input[0], false)) {\n    return true;\n  }\n  return false;\n};\n\nexports.stripAnsi = (data) => {\n  const ansiRE = /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n  return data.replace(ansiRE, '');\n};\n"]}