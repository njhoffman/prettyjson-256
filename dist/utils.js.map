{"version":3,"sources":["../lib/utils.js"],"names":["_","require","indent","numSpaces","data","isNumber","indented","spaces","Array","join","isArray","getMaxIndexLength","maxWidth","input","forEach","key","undefined","Math","max","length","isCustomColor","customColors","isObjectLike","keys","isEmpty","isSerializable","options","isBoolean","isFunction","isUndefined","isNull","isString","indexOf","Date","isError","inlineArrays","module","exports"],"mappings":";;;;;;;;AAAA,IAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEA,IAAMC,SAAS,SAATA,MAAS,CAACC,SAAD,EAA0B;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AACvC,MAAI,CAACJ,EAAEK,QAAF,CAAWF,SAAX,CAAD,IAA0BA,aAAa,CAA3C,EAA8C;AAC5C,WAAOC,IAAP;AACD;AACD,MAAIE,WAAWF,IAAf;AACA,MAAMG,SAAS,IAAIC,KAAJ,CAAUL,YAAY,CAAtB,EAAyBM,IAAzB,CAA8B,GAA9B,CAAf;AACA,MAAIT,EAAEU,OAAF,CAAUN,IAAV,CAAJ,EAAqB;AACnBE,aAAS,CAAT,IAAcC,SAASH,KAAK,CAAL,CAAvB;AACD,GAFD,MAEO;AACLE,eAAWC,SAASH,IAApB;AACD;AACD,SAAOE,QAAP;AACD,CAZD;;AAcA,IAAMK,oBAAoB,SAApBA,iBAAoB,QAAS;AACjC,MAAIC,WAAW,CAAf;AACA,qCAA2BC,KAA3B,EAAkCC,OAAlC,CAA0C,eAAO;AAC/C,QAAID,MAAME,GAAN,MAAeC,SAAnB,EAA8B;AAC5B;AACD;AACDJ,eAAWK,KAAKC,GAAL,CAASN,QAAT,EAAmBG,IAAII,MAAvB,CAAX;AACD,GALD;AAMA,SAAOP,QAAP;AACD,CATD;;AAWA,IAAMQ,gBAAgB,SAAhBA,aAAgB,CAAChB,IAAD,EAAOiB,YAAP,EAAwB;AAC5C,SAAOA,gBAAgBrB,EAAEsB,YAAF,CAAelB,IAAf,CAAhB,IAAwCJ,EAAEuB,IAAF,CAAOnB,IAAP,EAAae,MAAb,KAAwB,CAAhE,IAAqE,CAACnB,EAAEwB,OAAF,CAAUH,aAAarB,EAAEuB,IAAF,CAAOnB,IAAP,EAAa,CAAb,CAAb,CAAV,CAA7E;AACD,CAFD;;AAIA;AACA,IAAMqB,iBAAiB,SAAjBA,cAAiB,CAACZ,KAAD,EAAyB;AAAA,MAAjBa,OAAiB,uEAAP,EAAO;;AAC9C,MACEN,cAAcP,KAAd,EAAqBa,QAAQL,YAA7B,KACArB,EAAE2B,SAAF,CAAYd,KAAZ,CADA,IAEAb,EAAEK,QAAF,CAAWQ,KAAX,CAFA,IAGAb,EAAE4B,UAAF,CAAaf,KAAb,CAHA,IAIAb,EAAE6B,WAAF,CAAchB,KAAd,CAJA,IAKAb,EAAE8B,MAAF,CAASjB,KAAT,CALA,IAMCb,EAAE+B,QAAF,CAAWlB,KAAX,KAAqBA,MAAMmB,OAAN,CAAc,IAAd,MAAwB,CAAC,CAN/C,IAOAnB,iBAAiBoB,IARnB,EASE;AACA,WAAO,IAAP;AACD;;AAED;AACA,MAAIjC,EAAEsB,YAAF,CAAeT,KAAf,KAAyBb,EAAEwB,OAAF,CAAUX,KAAV,CAAzB,IAA6C,CAACb,EAAEkC,OAAF,CAAUrB,KAAV,CAAlD,EAAoE;AAClE,WAAO,IAAP;AACD;;AAED,MAAIa,QAAQS,YAAR,IAAwBnC,EAAEU,OAAF,CAAUG,KAAV,CAA5B,EAA8C;AAC5C,QAAIY,eAAeZ,MAAM,CAAN,CAAf,EAAyBa,OAAzB,CAAJ,EAAuC;AACrC,aAAO,IAAP;AACD;AACF;AACD,SAAO,KAAP;AACD,CAzBD;;AA2BAU,OAAOC,OAAP,GAAiB;AACfnC,gBADe;AAEfS,sCAFe;AAGfS,8BAHe;AAIfK;AAJe,CAAjB","file":"utils.js","sourcesContent":["const _ = require('lodash');\n\nconst indent = (numSpaces, data = '') => {\n  if (!_.isNumber(numSpaces) || numSpaces <= 0) {\n    return data;\n  }\n  let indented = data;\n  const spaces = new Array(numSpaces + 1).join(' ');\n  if (_.isArray(data)) {\n    indented[0] = spaces + data[0];\n  } else {\n    indented = spaces + data;\n  }\n  return indented;\n};\n\nconst getMaxIndexLength = input => {\n  let maxWidth = 0;\n  Object.getOwnPropertyNames(input).forEach(key => {\n    if (input[key] === undefined) {\n      return;\n    }\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};\n\nconst isCustomColor = (data, customColors) => {\n  return customColors && _.isObjectLike(data) && _.keys(data).length === 1 && !_.isEmpty(customColors[_.keys(data)[0]]);\n};\n\n// detect if an object can be output on same line\nconst isSerializable = (input, options = {}) => {\n  if (\n    isCustomColor(input, options.customColors) ||\n    _.isBoolean(input) ||\n    _.isNumber(input) ||\n    _.isFunction(input) ||\n    _.isUndefined(input) ||\n    _.isNull(input) ||\n    (_.isString(input) && input.indexOf('\\n') === -1) ||\n    input instanceof Date\n  ) {\n    return true;\n  }\n\n  // empty objects and arrays rendered on the same line\n  if (_.isObjectLike(input) && _.isEmpty(input) && !_.isError(input)) {\n    return true;\n  }\n\n  if (options.inlineArrays && _.isArray(input)) {\n    if (isSerializable(input[0], options)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = {\n  indent,\n  getMaxIndexLength,\n  isCustomColor,\n  isSerializable\n};\n"]}