{"version":3,"sources":["../lib/utils.js"],"names":["require","keys","isError","isEmpty","isFunction","isNumber","isUndefined","isNull","isString","isBoolean","isArray","isObjectLike","indent","numSpaces","Array","join","getMaxIndexLength","input","maxWidth","forEach","key","undefined","Math","max","length","isSerializable","options","isCustomColor","customColors","indexOf","Date","inlineArrays","data","module","exports"],"mappings":";;;;;;;;eAYIA,QAAQ,QAAR,C;IAXFC,I,YAAAA,I;IACAC,O,YAAAA,O;IACAC,O,YAAAA,O;IACAC,U,YAAAA,U;IACAC,Q,YAAAA,Q;IACAC,W,YAAAA,W;IACAC,M,YAAAA,M;IACAC,Q,YAAAA,Q;IACAC,S,YAAAA,S;IACAC,O,YAAAA,O;IACAC,Y,YAAAA,Y;;AAGF,IAAMC,SAAS,SAATA,MAAS,CAACC,SAAD,EAAe;AAC5B,SAAO,IAAIC,KAAJ,CAAUD,YAAY,CAAtB,EAAyBE,IAAzB,CAA8B,GAA9B,CAAP;AACD,CAFD;;AAIA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACnC,MAAIC,WAAW,CAAf;AACA,qCAA2BD,KAA3B,EAAkCE,OAAlC,CAA0C,UAACC,GAAD,EAAS;AACjD,QAAIH,MAAMG,GAAN,MAAeC,SAAnB,EAA8B;AAC5B;AACD;AACDH,eAAWI,KAAKC,GAAL,CAASL,QAAT,EAAmBE,IAAII,MAAvB,CAAX;AACD,GALD;AAMA,SAAON,QAAP;AACD,CATD;;AAWA;AACA,IAAMO,iBAAiB,SAAjBA,cAAiB,CAACR,KAAD,EAAyB;AAAA,MAAjBS,OAAiB,uEAAP,EAAO;;AAC9C,MAAIC,cAAcV,KAAd,EAAqBS,QAAQE,YAA7B,KACFnB,UAAUQ,KAAV,CADE,IAEFZ,SAASY,KAAT,CAFE,IAGFb,WAAWa,KAAX,CAHE,IAIFX,YAAYW,KAAZ,CAJE,IAKFV,OAAOU,KAAP,CALE,IAMDT,SAASS,KAAT,KAAmBA,MAAMY,OAAN,CAAc,IAAd,MAAwB,CAAC,CAN3C,IAOFZ,iBAAiBa,IAPnB,EAOyB;AACvB,WAAO,IAAP;AACD;;AAED;AACA,MAAInB,aAAaM,KAAb,KAAuBd,QAAQc,KAAR,CAAvB,IAAyC,CAACf,QAAQe,KAAR,CAA9C,EAA8D;AAC5D,WAAO,IAAP;AACD;;AAED,MAAIS,QAAQK,YAAR,IAAwBrB,QAAQO,KAAR,CAA5B,EAA4C;AAC1CS,YAAQK,YAAR,GAAuB,KAAvB;AACA,QAAIN,eAAeR,MAAM,CAAN,CAAf,EAAyBS,OAAzB,CAAJ,EAAuC;AACrC,aAAO,IAAP;AACD;AACF;AACD,SAAO,KAAP;AACD,CAxBD;;AA0BA,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACK,IAAD,EAAOJ,YAAP,EAAwB;AAC5C,SAAOA,gBACLjB,aAAaqB,IAAb,CADK,IAEL/B,KAAK+B,IAAL,EAAWR,MAAX,KAAsB,CAFjB,IAGL,CAACrB,QAAQyB,aAAa3B,KAAK+B,IAAL,EAAW,CAAX,CAAb,CAAR,CAHH;AAID,CALD;;AAOAC,OAAOC,OAAP,GAAiB;AACftB,gBADe;AAEfI,sCAFe;AAGfW,8BAHe;AAIfF;AAJe,CAAjB","file":"utils.js","sourcesContent":["const {\n  keys,\n  isError,\n  isEmpty,\n  isFunction,\n  isNumber,\n  isUndefined,\n  isNull,\n  isString,\n  isBoolean,\n  isArray,\n  isObjectLike\n} = require('lodash');\n\nconst indent = (numSpaces) => {\n  return new Array(numSpaces + 1).join(' ');\n};\n\nconst getMaxIndexLength = (input) => {\n  var maxWidth = 0;\n  Object.getOwnPropertyNames(input).forEach((key) => {\n    if (input[key] === undefined) {\n      return;\n    }\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};\n\n// detect if an object can be output on same line\nconst isSerializable = (input, options = {}) => {\n  if (isCustomColor(input, options.customColors) ||\n    isBoolean(input) ||\n    isNumber(input) ||\n    isFunction(input) ||\n    isUndefined(input) ||\n    isNull(input) ||\n    (isString(input) && input.indexOf('\\n') === -1) ||\n    input instanceof Date) {\n    return true;\n  }\n\n  // empty objects and arrays rendered on the same line\n  if (isObjectLike(input) && isEmpty(input) && !isError(input)) {\n    return true;\n  }\n\n  if (options.inlineArrays && isArray(input)) {\n    options.inlineArrays = false;\n    if (isSerializable(input[0], options)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst isCustomColor = (data, customColors) => {\n  return customColors &&\n    isObjectLike(data) &&\n    keys(data).length === 1 &&\n    !isEmpty(customColors[keys(data)[0]]);\n};\n\nmodule.exports = {\n  indent,\n  getMaxIndexLength,\n  isCustomColor,\n  isSerializable\n};\n"]}