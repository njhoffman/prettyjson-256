{"version":3,"sources":["../lib/settings.js"],"names":["require","each","clone","cloneDeep","defaultsDeep","keys","times","ansiColors","defaultOptions","alphabetizeKeys","defaultIndentation","depth","emptyArrayMsg","emptyObjectMsg","emptyStringMsg","noColor","numberArrays","showEmpty","browser","errorDivider","colors","boolFalse","fg","boolTrue","dash","date","empty","functionHeader","functionTag","number","string","errorName","errorMessage","errorStack","createColorBrowser","colorMap","printColor","val","key","sInput","options","cItem","colorCode","length","parseInt","toString","push","bg","bind","createColorTerminal","reset","grayscale","getRgb","apply","getOptions","init","customOptions","newColors","customColors","getPrintColor","outputColorCodes","colorCodes","r","g","b","exports","module"],"mappings":";;eAA8DA,QAAQ,QAAR,C;IAAtDC,I,YAAAA,I;IAAMC,K,YAAAA,K;IAAOC,S,YAAAA,S;IAAWC,Y,YAAAA,Y;IAAcC,I,YAAAA,I;IAAMC,K,YAAAA,K;;AACpD,IAAMC,aAAaP,QAAQ,iBAAR,CAAnB;;AAEA,IAAIQ,iBAAiB;AACnB;AACAC,mBAAoB,KAFD;AAGnB;AACAC,sBAAoB,CAJD;AAKnB;AACAC,SAAoB,CAAC,CANF;AAOnB;AACAC,iBAAoB,eARD;AASnBC,kBAAoB,IATD;AAUnBC,kBAAoB,IAVD;AAWnB;AACAC,WAAoB,KAZD;AAanB;AACAC,gBAAoB,KAdD;AAenB;AACAC,aAAoB,IAhBD;AAiBnB;AACAC,WAAS,KAlBU;AAmBnB;AACAC,gBAAoB,yCApBD;AAqBnB;AACAC,UAAoB;AAClBC,eAAgB,EAAEC,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EADE;AAElBC,cAAgB,EAAED,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAFE;AAGlBE,UAAgB,EAAEF,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAHE;AAIlBG,UAAgB,EAAEH,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAJE;AAKlBX,WAAgB,EAAEW,IAAI,CAAC,CAAD,CAAN,EALE;AAMlBI,WAAgB,EAAEJ,IAAI,CAAC,EAAD,CAAN,EANE;AAOlBK,oBAAgB,EAAEL,IAAI,CAAC,EAAD,CAAN,EAPE;AAQlBM,iBAAgB,EAAEN,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EARE;AASlBjB,UAAgB,EAAEiB,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EATE;AAUlBO,YAAgB,EAAEP,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAVE;AAWlBQ,YAAgB,EAAER,IAAI,CAAC,EAAD,CAAN,EAXE;AAYlBH,kBAAgB,EAAEG,IAAI,CAAC,EAAD,CAAN,EAZE;AAalBS,eAAgB,EAAET,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAbE;AAclBU,kBAAgB,EAAEV,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN,EAdE;AAelBW,gBAAgB,EAAEX,IAAI,CAAC,EAAD,CAAN;AAfE;AAtBD,CAArB;;AAyCA,IAAMY,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,MAAIC,aAAa,EAAjB;AACAnC,OAAKkC,QAAL,EAAe,UAACE,GAAD,EAAMC,GAAN,EAAc;AAC3BF,eAAWE,GAAX,IAAkB,UAAUA,GAAV,EAAeC,MAAf,EAAuB;AACvC,UAAIC,QAAQzB,OAAR,IAAmB,CAACoB,SAASG,GAAT,CAAxB,EAAuC;AACrC,eAAO,CAACC,MAAD,CAAP;AACD;AACD,UAAIE,QAAQ,SAAOF,MAAP,CAAZ;AACA,UAAIG,kBAAJ;AACA,UAAIP,SAASG,GAAT,EAAchB,EAAlB,EAAsB;AACpBoB,oBAAYP,SAASG,GAAT,EAAchB,EAAd,CAAiBqB,MAAjB,KAA4B,CAA5B,GACT,CAAC,KAAKC,SAAST,SAASG,GAAT,EAAchB,EAAvB,CAAN,EAAkCuB,QAAlC,CAA2C,EAA3C,IACC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAchB,EAAvB,CAAN,EAAkCuB,QAAlC,CAA2C,EAA3C,CADD,GAEC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAchB,EAAvB,CAAN,EAAkCuB,QAAlC,CAA2C,EAA3C,CAHQ,GAIT,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAchB,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCuB,QAArC,CAA8C,EAA9C,IACC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAchB,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCuB,QAArC,CAA8C,EAA9C,CADD,GAEC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAchB,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCuB,QAArC,CAA8C,EAA9C,CANJ;;AAQAJ,cAAMK,IAAN,cAAsBJ,SAAtB;AACD;AACD,UAAIP,SAASG,GAAT,EAAcS,EAAlB,EAAsB;AACpBL,oBAAYP,SAASG,GAAT,EAAcS,EAAd,CAAiBJ,MAAjB,KAA4B,CAA5B,GACTrC,MAAM,CAAN,EAAS,QAAQsC,SAAST,SAASG,GAAT,EAAcS,EAAvB,CAAjB,EAA6CF,QAA7C,CAAsD,EAAtD,CADS,GAET,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAcS,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCF,QAArC,CAA8C,EAA9C,IACC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAcS,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCF,QAArC,CAA8C,EAA9C,CADD,GAEC,CAAC,KAAKD,SAAST,SAASG,GAAT,EAAcS,EAAd,CAAiB,CAAjB,CAAT,CAAN,EAAqCF,QAArC,CAA8C,EAA9C,CAJJ;;AAMAJ,cAAMK,IAAN,yBAAiCJ,SAAjC;AACD;AACD,aAAOD,KAAP;AACD,KA3BiB,CA2BhBO,IA3BgB,YA2BLV,GA3BK,CAAlB;AA4BD,GA7BD;AA8BA,SAAOF,UAAP;AACD,CAjCD;;AAmCA,IAAMa,sBAAsB,SAAtBA,mBAAsB,CAACd,QAAD,EAAc;AACxC,MAAIC,aAAa,EAAjB;AACAnC,OAAKkC,QAAL,EAAe,UAACE,GAAD,EAAMC,GAAN,EAAc;AAC3BF,eAAWE,GAAX,IAAkB,UAAUA,GAAV,EAAeC,MAAf,EAAuB;AACvC,UAAI,CAACJ,SAASG,GAAT,CAAL,EAAoB;AAClB,eAAO/B,WAAW2C,KAAX,GAAmBX,MAA1B;AACD;AACD,UAAIC,QAAQzB,OAAZ,EAAqB;AACnB,eAAOwB,MAAP;AACD;AACD,UAAIE,QACFN,SAASG,GAAT,EAAchB,EAAd,GACIa,SAASG,GAAT,EAAchB,EAAd,CAAiBqB,MAAjB,KAA4B,CAA5B,GACEpC,WAAWe,EAAX,CAAc6B,SAAd,CAAwBhB,SAASG,GAAT,EAAchB,EAAd,CAAiB,CAAjB,CAAxB,CADF,GAEEa,SAASG,GAAT,EAAchB,EAAd,CAAiBqB,MAAjB,KAA4B,CAA5B,GACApC,WAAWe,EAAX,CAAc8B,MAAd,CAAqBC,KAArB,CAA2B,IAA3B,EAAiClB,SAASG,GAAT,EAAchB,EAA/C,CADA,GAEA,EALN,GAMI,EAPN;AAQAmB,eACE,CAACN,SAASG,GAAT,EAAcS,EAAd,GACGZ,SAASG,GAAT,EAAcS,EAAd,CAAiBJ,MAAjB,KAA4B,CAA5B,GACEpC,WAAWwC,EAAX,CAAcI,SAAd,CAAwBhB,SAASG,GAAT,EAAcS,EAAd,CAAiB,CAAjB,CAAxB,CADF,GAEEZ,SAASG,GAAT,EAAcS,EAAd,CAAiBJ,MAAjB,KAA4B,CAA5B,GACApC,WAAWwC,EAAX,CAAcK,MAAd,CAAqBC,KAArB,CAA2B,IAA3B,EAAiClB,SAASG,GAAT,EAAcS,EAA/C,CADA,GAEA,EALL,GAMG,EANJ,IAMUR,MANV,GAMmBhC,WAAW2C,KAPhC;AAQA,aAAOT,KAAP;AACD,KAxBiB,CAwBhBO,IAxBgB,YAwBLV,GAxBK,CAAlB;AAyBD,GA1BD;AA2BA,SAAOF,UAAP;AACD,CA9BD;;AAgCA,IAAII,UAAUrC,UAAUK,cAAV,CAAd;AACA,IAAM8C,aAAa,SAAbA,UAAa;AAAA,SAAMd,OAAN;AAAA,CAAnB;;AAEA,IAAIJ,mBAAJ;AACA,IAAMmB,OAAO,SAAPA,IAAO,GAAwB;AAAA,MAAvBC,aAAuB,uEAAP,EAAO;;AACnChB,YAAUpC,aAAaoD,aAAb,EAA4BhD,cAA5B,CAAV;AACAgC,UAAQ7B,KAAR,GAAgBiC,SAASJ,QAAQ7B,KAAjB,CAAhB;AACA6B,UAAQ9B,kBAAR,GAA6BkC,SAASJ,QAAQ9B,kBAAjB,CAA7B;;AAEA,MAAM+C,YAAYvD,MAAMsC,QAAQpB,MAAd,CAAlB;AACA,MAAIoB,QAAQkB,YAAZ,EAA0B;AACxBzD,SAAKI,KAAKmC,QAAQkB,YAAb,CAAL,EAAiC,UAACpB,GAAD,EAAS;AACxCmB,gBAAUnB,GAAV,IAAiBE,QAAQkB,YAAR,CAAqBpB,GAArB,CAAjB;AACD,KAFD;AAGD;AACD,MAAIE,QAAQtB,OAAZ,EAAqB;AACnBkB,iBAAaF,mBAAmBuB,SAAnB,CAAb;AACD,GAFD,MAEO;AACLrB,iBAAaa,oBAAoBQ,SAApB,CAAb;AACD;AACD,SAAOrB,UAAP;AACD,CAjBD;AAkBA,IAAMuB,gBAAgB,SAAhBA,aAAgB;AAAA,SAAMvB,UAAN;AAAA,CAAtB;;AAEA,IAAMwB,mBAAmB,SAAnBA,gBAAmB,GAAM;AAC7B,MAAIC,aAAa,EAAjB;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AAC3B,SAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AAC3B,WAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,CAArB,EAAwBA,GAAxB,EAA6B;AAC3BH,sBAActD,WAAWe,EAAX,CAAc8B,MAAd,CAAqBU,CAArB,EAAwBC,CAAxB,EAA2BC,CAA3B,iBAA0CF,CAA1C,UAAgDC,CAAhD,UAAsDC,CAAtD,aAAgEzD,WAAW2C,KAAzF;AACD;AACDW,oBAAc,IAAd;AACD;AACDA,kBAAc,IAAd;AACD;AACD,SAAOA,UAAP;AACD,CAZD;;AAcAI,UAAUC,OAAOD,OAAP,GAAiB;AACzBV,YADyB;AAEzBD,wBAFyB;AAGzBK,8BAHyB;AAIzBC;AAJyB,CAA3B;;AAOAK,QAAQV,IAAR","file":"settings.js","sourcesContent":["const { each, clone, cloneDeep, defaultsDeep, keys, times } = require('lodash');\nconst ansiColors = require('ansi-256-colors');\n\nlet defaultOptions = {\n  // sort object keys or array values alphabetically\n  alphabetizeKeys:    false,\n  // how many spaces to indent nested objects\n  defaultIndentation: 2,\n  // maximum depth of nested levels to display for an object\n  depth:              -1,\n  // what to display if value is an empty array, object, or string\n  emptyArrayMsg:      '(empty array)',\n  emptyObjectMsg:     '{}',\n  emptyStringMsg:     '\"\"',\n  // don't output any color\n  noColor:            false,\n  // show array indexes, this will prevent array from sorting if alphabetizeKeys is on\n  numberArrays:       false,\n  // show if contained in an object an array, string, or another object is empty\n  showEmpty:          true,\n  // color output format for terminal or browser\n  browser: false,\n  // divider when an error object is encountered\n  errorDivider:       '---------------------------------------',\n  // color codes for different output elements based on: https://github.com/jbnicolai/ansi-256-colors\n  colors:             {\n    boolFalse:      { fg: [5, 4, 4] },\n    boolTrue:       { fg: [4, 4, 5] },\n    dash:           { fg: [2, 5, 4] },\n    date:           { fg: [0, 5, 2] },\n    depth:          { fg: [9] },\n    empty:          { fg: [13] },\n    functionHeader: { fg: [13] },\n    functionTag:    { fg: [4, 4, 5] },\n    keys:           { fg: [2, 5, 4] },\n    number:         { fg: [2, 4, 5] },\n    string:         { fg: [20] },\n    errorDivider:   { fg: [18] },\n    errorName:      { fg: [5, 0, 0] },\n    errorMessage:   { fg: [5, 5, 5] },\n    errorStack:     { fg: [15] }\n  }\n};\n\nconst createColorBrowser = (colorMap) => {\n  let printColor = {};\n  each(colorMap, (val, key) => {\n    printColor[key] = function (key, sInput) {\n      if (options.noColor || !colorMap[key]) {\n        return [sInput];\n      }\n      let cItem = [`%c ${sInput}`];\n      let colorCode;\n      if (colorMap[key].fg) {\n        colorCode = colorMap[key].fg.length === 1 ?\n          ((11 * parseInt(colorMap[key].fg)).toString(16)  +\n            (11 * parseInt(colorMap[key].fg)).toString(16) +\n            (11 * parseInt(colorMap[key].fg)).toString(16)) :\n          ((51 * parseInt(colorMap[key].fg[0])).toString(16) +\n            (51 * parseInt(colorMap[key].fg[1])).toString(16) +\n            (51 * parseInt(colorMap[key].fg[2])).toString(16));\n\n        cItem.push(`color: #${colorCode}`);\n      }\n      if (colorMap[key].bg) {\n        colorCode = colorMap[key].bg.length === 1 ?\n          (times(3, 11.09 * parseInt(colorMap[key].bg)).toString(16)) :\n          ((51 * parseInt(colorMap[key].bg[0])).toString(16) +\n            (51 * parseInt(colorMap[key].bg[1])).toString(16) +\n            (51 * parseInt(colorMap[key].bg[2])).toString(16));\n\n        cItem.push(`background-color: #${colorCode}`);\n      }\n      return cItem;\n    }.bind(this, key);\n  });\n  return printColor;\n};\n\nconst createColorTerminal = (colorMap) => {\n  let printColor = {};\n  each(colorMap, (val, key) => {\n    printColor[key] = function (key, sInput) {\n      if (!colorMap[key]) {\n        return ansiColors.reset + sInput;\n      }\n      if (options.noColor) {\n        return sInput;\n      }\n      let cItem =\n        colorMap[key].fg\n          ? colorMap[key].fg.length === 1\n            ? ansiColors.fg.grayscale[colorMap[key].fg[0]]\n            : colorMap[key].fg.length === 3\n            ? ansiColors.fg.getRgb.apply(this, colorMap[key].fg)\n            : ''\n          : '';\n      cItem +=\n        (colorMap[key].bg\n          ? colorMap[key].bg.length === 1\n            ? ansiColors.bg.grayscale[colorMap[key].bg[0]]\n            : colorMap[key].bg.length === 3\n            ? ansiColors.bg.getRgb.apply(this, colorMap[key].bg)\n            : ''\n          : '') + sInput + ansiColors.reset;\n      return cItem;\n    }.bind(this, key);\n  });\n  return printColor;\n};\n\nlet options = cloneDeep(defaultOptions);\nconst getOptions = () => options;\n\nlet printColor;\nconst init = (customOptions = {}) => {\n  options = defaultsDeep(customOptions, defaultOptions);\n  options.depth = parseInt(options.depth);\n  options.defaultIndentation = parseInt(options.defaultIndentation);\n\n  const newColors = clone(options.colors);\n  if (options.customColors) {\n    each(keys(options.customColors), (key) => {\n      newColors[key] = options.customColors[key];\n    });\n  }\n  if (options.browser) {\n    printColor = createColorBrowser(newColors);\n  } else {\n    printColor = createColorTerminal(newColors);\n  }\n  return printColor;\n};\nconst getPrintColor = () => printColor;\n\nconst outputColorCodes = () => {\n  let colorCodes = '';\n  for (let r = 0; r <= 5; r++) {\n    for (let g = 0; g <= 5; g++) {\n      for (let b = 0; b <= 5; b++) {\n        colorCodes += ansiColors.fg.getRgb(r, g, b) + `[color ${r}, ${g}, ${b}]   ` + ansiColors.reset;\n      }\n      colorCodes += '\\n';\n    }\n    colorCodes += '\\n';\n  }\n  return colorCodes;\n};\n\nexports = module.exports = {\n  init,\n  getOptions,\n  getPrintColor,\n  outputColorCodes\n};\n\nexports.init();\n"]}