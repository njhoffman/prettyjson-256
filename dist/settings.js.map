{"version":3,"sources":["../lib/settings.js"],"names":["require","each","clone","cloneDeep","defaultsDeep","keys","colors","defaultOptions","alphabetizeKeys","defaultIndentation","depth","emptyArrayMsg","emptyObjectMsg","emptyStringMsg","noColor","numberArrays","showEmpty","errorDivider","boolFalse","fg","boolTrue","dash","date","empty","functionHeader","functionTag","number","string","errorName","errorMessage","errorStack","createColorObj","colorMap","printColor","val","key","sInput","reset","options","cItem","length","grayscale","getRgb","apply","bg","bind","getOptions","init","customOptions","parseInt","newColors","customColors","getPrintColor","outputColorCodes","colorCodes","r","g","b","exports","module"],"mappings":"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","file":"settings.js","sourcesContent":["const { each, clone, cloneDeep, defaultsDeep, keys } = require('lodash');\nconst colors  = require('ansi-256-colors');\n\nlet defaultOptions = {\n  // sort object keys or array values alphabetically\n  alphabetizeKeys:    false,\n  // how many spaces to indent nested objects\n  defaultIndentation: 2,\n  // maximum depth of nested levels to display for an object\n  depth:              -1,\n  // what to display if value is an empty array, object, or string\n  emptyArrayMsg:      '(empty array)',\n  emptyObjectMsg:     '{}',\n  emptyStringMsg:     '\"\"',\n  // don't output any color\n  noColor:            false,\n  // show array indexes, this will prevent array from sorting if alphabetizeKeys is on\n  numberArrays:       false,\n  // show if contained in an object an array, string, or another object is empty\n  showEmpty:          true,\n  // divider when an error object is encountered\n  errorDivider:       '---------------------------------------',\n  // color codes for different output elements based on: https://github.com/jbnicolai/ansi-256-colors\n  colors:             {\n    boolFalse:      { fg: [5, 4, 4] },\n    boolTrue:       { fg: [4, 4, 5] },\n    dash:           { fg: [2, 5, 4] },\n    date:           { fg: [0, 5, 2] },\n    depth:          { fg: [9] },\n    empty:          { fg: [13] },\n    functionHeader: { fg: [13] },\n    functionTag:    { fg: [4, 4, 5] },\n    keys:           { fg: [2, 5, 4] },\n    number:         { fg: [2, 4, 5] },\n    string:         null,\n    errorDivider:   { fg: [18] },\n    errorName:      { fg: [5, 0, 0] },\n    errorMessage:   { fg: [5, 5, 5] },\n    errorStack:     { fg: [15] }\n  }\n};\n\nconst createColorObj = (colorMap) => {\n  var printColor = {};\n  each(colorMap, (val, key) => {\n    printColor[key] = function (key, sInput) {\n      if (!colorMap[key]) {\n        return colors.reset + sInput;\n      }\n      if (options.noColor) {\n        return sInput;\n      }\n      let cItem =\n        colorMap[key].fg\n          ? colorMap[key].fg.length === 1\n            ? colors.fg.grayscale[colorMap[key].fg[0]]\n            : colorMap[key].fg.length === 3\n            ? colors.fg.getRgb.apply(this, colorMap[key].fg)\n            : ''\n          : '';\n      cItem +=\n        (colorMap[key].bg\n          ? colorMap[key].bg.length === 1\n            ? colors.bg.grayscale[colorMap[key].bg[0]]\n            : colorMap[key].bg.length === 3\n            ? colors.bg.getRgb.apply(this, colorMap[key].bg)\n            : ''\n          : '') + sInput + colors.reset;\n      return cItem;\n    }.bind(this, key);\n  });\n  return printColor;\n};\n\nlet options = cloneDeep(defaultOptions);\nconst getOptions = () => options;\n\nlet printColor;\nconst init = (customOptions = {}) => {\n  options = defaultsDeep(customOptions, defaultOptions);\n  options.depth = parseInt(options.depth);\n  options.defaultIndentation = parseInt(options.defaultIndentation);\n\n  const newColors = clone(options.colors);\n  if (options.customColors) {\n    each(keys(options.customColors), (key) => {\n      newColors[key] = options.customColors[key];\n    });\n  }\n  printColor = createColorObj(newColors);\n  return printColor;\n};\nconst getPrintColor = () => printColor;\n\nconst outputColorCodes = () => {\n  let colorCodes = '';\n  for (let r = 0; r <= 5; r++) {\n    for (let g = 0; g <= 5; g++) {\n      for (let b = 0; b <= 5; b++) {\n        colorCodes += colors.fg.getRgb(r, g, b) + `[color ${r}, ${g}, ${b}]   ` + colors.reset;\n      }\n      colorCodes += '\\n';\n    }\n    colorCodes += '\\n';\n  }\n  return colorCodes;\n};\n\nexports = module.exports = {\n  init,\n  getOptions,\n  getPrintColor,\n  outputColorCodes\n};\n\nexports.init();\n"]}