{"version":3,"sources":["../lib/settings.js"],"names":["require","each","clone","cloneDeep","defaultsDeep","keys","isNumber","times","ansiColors","defaultOptions","alphabetizeKeys","defaultIndentation","depth","emptyArrayMsg","emptyObjectMsg","emptyStringMsg","noColor","numberArrays","showEmpty","browser","errorDivider","colors","boolFalse","fg","boolTrue","dash","date","empty","functionHeader","functionTag","number","string","errorName","errorMessage","errorStack","customColors","bold","blue","lightBlue","darkBlue","red","lightRed","darkRed","green","lightGreen","darkGreen","purple","lightPurple","darkPurple","cyan","lightCyan","darkCyan","yellow","orange","white","gray","createColorBrowser","colorMap","printColor","val","key","sInput","options","cItem","colorCode","_","has","bg","length","parseInt","toString","push","bind","createColorTerminal","reset","grayscale","getRgb","apply","getOptions","init","customOptions","newColors","getPrintColor","outputColorCodes","colorCodes","r","g","b","exports","module"],"mappings":"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","file":"settings.js","sourcesContent":["const { each, clone, cloneDeep, defaultsDeep, keys, isNumber, times } = require('lodash');\nconst ansiColors = require('ansi-256-colors');\n\nlet defaultOptions = {\n  // sort object keys or array values alphabetically\n  alphabetizeKeys:    false,\n  // how many spaces to indent nested objects\n  defaultIndentation: 2,\n  // maximum depth of nested levels to display for an object\n  depth:              -1,\n  // what to display if value is an empty array, object, or string\n  emptyArrayMsg:      '(empty array)',\n  emptyObjectMsg:     '{}',\n  emptyStringMsg:     '\"\"',\n  // don't output any color\n  noColor:            false,\n  // show array indexes, this will prevent array from sorting if alphabetizeKeys is on\n  numberArrays:       false,\n  // show if contained in an object an array, string, or another object is empty\n  showEmpty:          true,\n  // color output format for terminal or browser\n  browser: false,\n  // divider when an error object is encountered\n  errorDivider:       '---------------------------------------',\n  // color codes for different output elements based on: https://github.com/jbnicolai/ansi-256-colors\n  colors:           {\n    boolFalse:      { fg: [5, 4, 4] },\n    boolTrue:       { fg: [4, 4, 5] },\n    dash:           { fg: [2, 5, 4] },\n    date:           { fg: [0, 5, 2] },\n    depth:          { fg: [9] },\n    empty:          { fg: [13] },\n    functionHeader: { fg: [13] },\n    functionTag:    { fg: [4, 4, 5] },\n    keys:           { fg: [2, 5, 4] },\n    number:         { fg: [2, 4, 5] },\n    string:         { fg: [20] },\n    errorDivider:   { fg: [8] },\n    errorName:      { fg: [5, 0, 0] },\n    errorMessage:   { fg: [5, 5, 5] },\n    errorStack:     { fg: [15] },\n  },\n  customColors: {\n    bold:          { fg: [23] },\n    blue:          { fg: [0, 0, 4] },\n    lightBlue:     { fg: [0, 1, 5] },\n    darkBlue:      { fg: [0, 0, 3] },\n    red:           { fg: [3, 0, 0] },\n    lightRed:      { fg: [5, 0, 0] },\n    darkRed:       { fg: [1, 0, 0] },\n    green:         { fg: [0, 3, 0] },\n    lightGreen:    { fg: [0, 5, 0] },\n    darkGreen:     { fg: [0, 1, 0] },\n    purple:        { fg: [1, 0, 3] },\n    lightPurple:   { fg: [2, 0, 5] },\n    darkPurple:    { fg: [1, 0, 1] },\n    cyan:          { fg: [2, 3, 4] },\n    lightCyan:     { fg: [2, 5, 5] },\n    darkCyan:      { fg: [1, 2, 3] },\n    yellow:        { fg: [4, 5, 0] },\n    orange:        { fg: [5, 2, 0] },\n    white:         { fg: [0, 3, 0] },\n    gray:          { fg: [12] },\n  }\n};\n\nconst createColorBrowser = (colorMap) => {\n  let printColor = {};\n  each(colorMap, (val, key) => {\n    printColor[key] = function (key, sInput) {\n      // console.info('print 1: ' + key + ' - ' +  sInput);\n      if (options.noColor || !colorMap[key]) {\n        return [sInput];\n      }\n      let cItem = [`%c ${sInput}`];\n      let colorCode;\n      const fg = _.has(colorMap, `${key}.fg`) ? colorMap[key].fg : false;\n      const bg = _.has(colorMap, `${key}.bg`) ? colorMap[key].bg : false;\n\n      if (fg) {\n        colorCode = fg.length === 1\n          ? ((11 * parseInt(fg)).toString(16) +\n            (11 * parseInt(fg)).toString(16) +\n            (11 * parseInt(fg)).toString(16))\n          : ((51 * parseInt(fg[0])).toString(16) +\n            (51 * parseInt(fg[1])).toString(16) +\n            (51 * parseInt(fg[2])).toString(16));\n        cItem.push(`color: #${colorCode}`);\n      }\n\n      if (bg) {\n        colorCode = bg.length === 1 ?\n          (times(3, 11.09 * parseInt(bg)).toString(16)) :\n          ((51 * parseInt(bg[0])).toString(16) +\n            (51 * parseInt(bg[1])).toString(16) +\n            (51 * parseInt(bg[2])).toString(16));\n        cItem.push(`background-color: #${colorCode}`);\n      }\n      // console.info('print 2', cItem);\n      return cItem;\n    }.bind(this, key);\n  });\n  return printColor;\n};\n\nconst createColorTerminal = (colorMap) => {\n  let printColor = {};\n  each(colorMap, (val, key) => {\n    printColor[key] = function (key, sInput) {\n      if (!colorMap[key]) {\n        return ansiColors.reset + sInput;\n      }\n      if (options.noColor) {\n        return sInput;\n      }\n      let cItem =\n        colorMap[key].fg\n          ? isNumber(colorMap[key].fg)\n            ? ansiColors.fg.grayscale[colorMap[key].fg]\n            : colorMap[key].fg.length === 3\n            ? ansiColors.fg.getRgb.apply(this, colorMap[key].fg)\n            : ''\n          : '';\n      cItem +=\n        (colorMap[key].bg\n          ? isNumber(colorMap[key].bg)\n            ? ansiColors.bg.grayscale[colorMap[key].bg]\n            : colorMap[key].bg.length === 3\n            ? ansiColors.bg.getRgb.apply(this, colorMap[key].bg)\n            : ''\n          : '') + sInput + ansiColors.reset;\n      return cItem;\n    }.bind(this, key);\n  });\n  return printColor;\n};\n\nlet options = cloneDeep(defaultOptions);\nconst getOptions = () => options;\n\nlet printColor;\nconst init = (customOptions = {}) => {\n  options = defaultsDeep(customOptions, defaultOptions);\n  options.depth = parseInt(options.depth);\n  options.defaultIndentation = parseInt(options.defaultIndentation);\n\n  const newColors = clone(options.colors);\n  if (options.customColors) {\n    each(keys(options.customColors), (key) => {\n      newColors[key] = options.customColors[key];\n    });\n  }\n  if (options.browser) {\n    printColor = createColorBrowser(newColors);\n  } else {\n    printColor = createColorTerminal(newColors);\n  }\n  return printColor;\n};\nconst getPrintColor = () => printColor;\n\nconst outputColorCodes = () => {\n  let colorCodes = '';\n  for (let r = 0; r <= 5; r++) {\n    for (let g = 0; g <= 5; g++) {\n      for (let b = 0; b <= 5; b++) {\n        colorCodes += ansiColors.fg.getRgb(r, g, b) + `[color ${r}, ${g}, ${b}]   ` + ansiColors.reset;\n      }\n      colorCodes += '\\n';\n    }\n    colorCodes += '\\n';\n  }\n  return colorCodes;\n};\n\nexports = module.exports = {\n  init,\n  getOptions,\n  getPrintColor,\n  outputColorCodes\n};\n\nexports.init();\n"]}